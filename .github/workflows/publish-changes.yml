# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: copy this repo's contents
      uses: actions/checkout@v2
      with:
        path: "current_files"
        persist-credentials: false
        
    - name: Say Hello
      run: |
        echo "hello"
        
    - name: push changes to branch
      if: steps.check_version.outputs.vbump == 'true'
      run: |
          # commit changes
          cd current_files
          git config --global user.email "${GH_USERNAME}@users.noreply.github.com"
          git config --global user.name "${GH_USERNAME}"
          git remote remove origin
          git remote add origin "git@github.com:${GITHUB_REPOSITORY}.git"
          git add _action_files/book
          git checkout -b generated-files
          git add -A
          git commit -m'Add generated files'
          git push -f --set-upstream origin generated-files main
      env:
          GH_USERNAME: ${{ github.event.issue.user.login }}
          
    - name: Open a PR
      if: steps.check_version.outputs.vbump == 'true'
      id: pr
      uses: actions/github-script@0.6.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          var fs = require('fs');
          #var contents = fs.readFileSync('current_files/_fastpages_docs/_upgrade_pr.md', 'utf8');
          github.pulls.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title: 'Publish latest book updates',
                        head: 'generated-files',
                          base: 'main',
                          body: ``
                          })
                        .then(result => console.log(`::set-output name=pr_num::${result.data.number}`))
